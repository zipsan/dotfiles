# ====================
# +  zipsan's zshrc  +
# ====================
DOTFILES_BASE_DIR="$HOME/dotfiles"
ZSHRC_BASE_DIR="$HOME/dotfiles/zshrc"


# ===================
#  Environment
# ===================
# if [ type "pyenv" > /dev/null 2>&1 ]; then
if [ "$(ls ~/.pyenv 2> /dev/null)" ]; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
fi
if [ "$(ls ~/.goenv 2> /dev/null)" ]; then
    export GOENV_ROOT="$HOME/.goenv"
    export PATH="$GOENV_ROOT/bin:$PATH"
    eval "$(goenv init -)"
fi


export PATH="$PATH:$HOME/.config/bin/"
export PATH="$PATH:$DOTFILES_BASE_DIR/commands/"

export DENO_INSTALL="$HOME/.deno"
export PATH="$PATH:$DENO_INSTALL/bin"


# ===================
#  load modules
# ===================

files=`find "${ZSHRC_BASE_DIR}/modules" -type f`
echo $files | while read line
do
    GREP_RESULT=`echo "$line" | grep ".DS_Store"`
    if [ "$GREP_RESULT" = "" ]; then
        source $line
    fi
done

ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#ff00ff"
source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh

# ====================
#  base setting
# ====================
# -*- options -*-
setopt promptsubst
setopt auto_param_slash
setopt mark_dirs
setopt list_types
setopt auto_menu
setopt auto_param_keys
setopt interactive_comments
setopt magic_equal_subst
setopt complete_in_word
setopt always_last_prompt
setopt print_eight_bit
setopt extended_glob
setopt globdots



# ====================
#  History
# ====================
HISTCONTROL=ignoredups:ignorespace
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=100000



# ====================
#  Prompt(PS)
# ====================
FIRSTLINE_COLOR=yellow
MAINLINE_COLOR=cyan
SSH_MESSAGE_COLOR=blue
STATUS_OK_COLOR=cyan
STATUS_OK_PROMPT=":)"
STATUS_NG_COLOR=red
STATUS_NG_PROMPT=":("

COLOR_SETTING_FILEPATH="${ZSHRC_BASE_DIR}/platform_custom/terminal_color_settings"
if [ -e $COLOR_SETTING_FILEPATH ]; then
  source $COLOR_SETTING_FILEPATH
fi

if [ -n "${SSH_CLIENT}" ]; then
  SSH_HOST=`echo ${SSH_CLIENT} | cut -d' ' -f1`
  SSH_MESSAGE="(ssh from: ${SSH_HOST})"
else
  SSH_MESSAGE=""
fi

STATUS_PROMPT="%(?.%F{${STATUS_OK_COLOR}}${STATUS_OK_PROMPT}%f.%F{${STATUS_NG_COLOR}}${STATUS_NG_PROMPT}%f)"

PS1="
%F{${FIRSTLINE_COLOR}}20%D %* >> %d%f
%F{${MAINLINE_COLOR}}[${USER}@${HOST%%.*}]${STATUS_PROMPT}%F{${MAINLINE_COLOR}}%(!.#.$)%f "

RPROMPT="%F{${SSH_MESSAGE_COLOR}}${SSH_MESSAGE}%f"



# ====================
#  Color
# ====================
export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'



# ====================
#  Aliases
# ====================
# -*- change default -*-
alias ls='ls --color=auto -F'
alias ps="ps --sort=start_time"
alias grep="grep --color=auto"


# -*- lazy commands -*-
alias l='ls --color=auto -F'
alias ll='ls -lAF --color=auto'
alias cl='clear'
alias py='python'
alias py2='python2'
alias py3='python3'
alias df='df -h'
alias d='docker'
alias d-c='docker-compose'
alias d-ncenter='docker run -it --privileged --pid=host debian nsenter -t 1 -m -u -n -i sh'
function chpwd() { ls_abbrev }  # ls after cd


# -*- useful commands -*-
alias aslron='sudo sysctl -w kernel.randomize_va_space=2'
alias aslroff='sudo sysctl -w kernel.randomize_va_space=0'
alias psg='ps aux | grep -i'
alias findr='sudo find / -name'
alias loadzsh='source ~/.zshrc'
alias vimzsh='vim ~/.zshrc'
alias vimvim='vim ~/.vimrc'
alias vimtmux='vim ~/.tmux.conf'
alias vimssh='vim ~/.ssh/config'
alias cdn='cd `find -mindepth 1 -maxdepth 1 -type d | xargs ls -td | head -n 1`' # cd to the latest created dir
alias wget-recursive="wget \
--recursive \
--no-clobber \
--page-requisites \
--html-extension \
--convert-links \
--restrict-file-names=windows \
--no-parent \
--domains"
alias ..='cd ../'
alias ../='cd ../'
alias ../../='cd ../../'
alias ../../../='cd ../../../'
alias ../../../../='cd ../../../../'
alias ../../../../../='cd ../../../../../'
alias ..='cd ../'
alias ....='cd ../../'
alias ......='cd ../../../'
alias ........='cd ../../../../'
alias ..........='cd ../../../../../'
alias generate_password='/usr/bin/python -c "import sys;import random;import string; print str.join(str(), [random.choice(string.punctuation + string.ascii_letters + string.digits) for i in range(int(sys.argv[1]))])"'
alias jsonlint='/usr/bin/python -c "import sys;import json;print json.dumps(json.loads(sys.stdin.read()), ensure_ascii=False, indent=4)"'
alias showmask="sh $HOME/dotfiles/zshrc/scripts/show_mask.sh"
alias sus="sort -r | uniq -c | sort -r"
alias activate="source ./venv/bin/activate"


# -*- for typo -*-
alias sudp='sudo'

# -*- for git -*-
alias gitpsom='git push origin master'
alias gitplom='git pull origin master'
alias gitplum='git pull upstream master'
alias gitpso='git push origin'
alias gitpsod='git push origin develop'
alias gitplo='git pull origin'
alias gitplod='git pull origin develop'
alias gitplud='git pull upstream develop'

alias gita='git add'
alias gitat='git add . -A -n'
alias gitc='git commit -m'
alias gitb='git branch'
alias gits='git status'
alias gitcho='git checkout '
alias gitm='git merge'

alias docker-rmall-containers='docker rm -f $(docker ps -a -q)'

alias python='python3'
# ====================
#  Completion
# ====================
# -*- default -*-
autoload -U compinit
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' verbose yes
zstyle ':completion:*' completer _expand _complete _match _prefix _approximate _list _history
zstyle ':completion:*:messages' format '%F{YELLOW}%d'$DEFAULT
zstyle ':completion:*:warnings' format '%F{RED}No matches for:''%F{YELLOW} %d'$DEFAULT
zstyle ':completion:*:descriptions' format '%F{YELLOW}completing %B%d%b'$DEFAULTzstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:descriptions' format '%F{yellow}Completing %B%d%b%f'$DEFAULT
zstyle ':completion:*' list-separator '-->'
zstyle ':completion:*:manuals' separate-sections true
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z} r:|[-_.]=**'



# ===============
#  Keybindings
# ===============
# -*- binding -*-
stty stop undef
stty -ixon -ixoff
bindkey -r "^s"
bindkey -r "^j"
bindkey -r "^k"
bindkey "^h" backward-word
bindkey "^l" forward-word
bindkey "^[OH" beginning-of-line  # HOME
bindkey "^[OF" end-of-line  # END
bindkey "^[[3~" delete-char  # DEL


# -*- known_hosts -*-
autoload -U compinit && compinit
function print_known_hosts (){ 
  if [ -f $HOME/.ssh/known_hosts ]; then
    cat $HOME/.ssh/known_hosts | tr ',' ' ' | cut -d' ' -f1 
  fi
}
_cache_hosts=($( print_known_hosts ))


# -*- cheat-sheet -*-
cheat-sheet () { zle -M "`cat ${ZSHRC_BASE_DIR}/cheat-sheet/cheat-sheet.conf`" }
zle -N cheat-sheet
bindkey "^[^h" cheat-sheet
git-cheat () { zle -M "`cat ${ZSHRC_BASE_DIR}/cheat-sheet/git-cheat.conf`" }
zle -N git-cheat
bindkey "^[^g" git-cheat


# -*- ls with Enter key -*-
enter_ls() {
  zle accept-line
  if [[ -z "$BUFFER" ]]; then
    echo
    ls_abbrev
  fi
}
zle -N enter_ls
bindkey "^m" enter_ls



# ===============================
#  extra customize (each os/env)
# ===============================
# -*- for Environment -*-
[ -f $ZSHRC_BASE_DIR/platform_custom/alias_`uname` ] && . $ZSHRC_BASE_DIR/platform_custom/alias_`uname`

MACHINE_DEPENDENT_SETTINGS_FILEPATH="${ZSHRC_BASE_DIR}/platform_custom/machine_dependent"
if [ -e $MACHINE_DEPENDENT_SETTINGS_FILEPATH ]; then
  source $MACHINE_DEPENDENT_SETTINGS_FILEPATH 2>&1 /dev/null
fi


[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
